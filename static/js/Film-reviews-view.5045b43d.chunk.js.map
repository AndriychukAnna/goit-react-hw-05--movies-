{"version":3,"sources":["Components/views/SubFilmDetailsReviewsView/SubFilmDetailsReviewsView.js"],"names":["SubFilmDetailsReviewsView","useState","reviews","setReviews","error","setError","moviesId","useParams","useEffect","fetchFilmReviews","then","response","results","length","map","review","author","content","id"],"mappings":"qOAIe,SAASA,IACtB,MAA8BC,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAS,MAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEQC,EAAaC,cAAbD,SAYR,OAVAE,qBAAU,WACRC,YAAiBH,GAAUI,MAAK,SAACC,GACC,IAA5BA,EAASC,QAAQC,OAIrBV,EAAWQ,EAASC,SAHlBP,EAAS,4CAKZ,CAACC,IAGF,gCACE,4BAAIF,IACJ,6BACGF,GACCA,EAAQY,KAAI,SAACC,GAAD,OACV,+BACE,wCAAWA,EAAOC,UAClB,4BAAID,EAAOE,YAFJF,EAAOG","file":"static/js/Film-reviews-view.5045b43d.chunk.js","sourcesContent":["import { useParams } from \"react-router\";\nimport { useState, useEffect } from \"react\";\nimport { fetchFilmReviews } from \"../../../FetchFilms/FetchFilms\";\n\nexport default function SubFilmDetailsReviewsView() {\n  const [reviews, setReviews] = useState(null);\n  const [error, setError] = useState(null);\n\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    fetchFilmReviews(moviesId).then((response) => {\n      if (response.results.length === 0) {\n        setError(`There are no reviews for this movie`);\n        return;\n      }\n      setReviews(response.results);\n    });\n  }, [moviesId]);\n\n  return (\n    <div>\n      <p>{error}</p>\n      <ul>\n        {reviews &&\n          reviews.map((review) => (\n            <li key={review.id}>\n              <p>Author {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n}\n"],"sourceRoot":""}